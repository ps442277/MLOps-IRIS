# Python package

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true
    architecture: 'x64'

- task: Bash@3
  inputs:
- task: AzureCLI@2
  inputs:
    azureSubscription: 'iris_connection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'az ml computetarget create amlcompute'
    filePath: 'environment_setup/install-requirements.sh'
- task: AzureCLI@2
  inputs:
    azureSubscription: 'iris_connection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: 'az execution'
  inputs:
    azureSubscription: 'iris_connection'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: 'az execution create -g $(ml.resourcegroup) -w $(ml.workspace) -l $(ml.region) --exist -ok --yes'
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python27:
      python.version: '2.7'
    Python35:
      python.version: '3.5'
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'
